# version control
include ../../../../ysyx-workbench/Makefile

TOPNAME = ysyx
INC_PATH ?=



# Include variables and rules generated by menuconfig
#-include $(NEMU_HOME)/include/config/auto.conf
#-include $(NEMU_HOME)/include/config/auto.conf.cmd

remove_quote = $(patsubst "%",%,$(1))

# Extract variabls from menuconfig
GUEST_ISA ?= $(call remove_quote,$(CONFIG_ISA))
ENGINE ?= $(call remove_quote,$(CONFIG_ENGINE))
NAME    = $(GUEST_ISA)-nemu-$(ENGINE)

CFLAGS_TRACE += -DITRACE_COND=$(if $(CONFIG_ITRACE_COND),$(call remove_quote,$(CONFIG_ITRACE_COND)),true)

# source files
VSRCS = $(shell find $(abspath ./vsrc) -name "*.v" -or -name "*.sv")
CSRCS = $(NPC_HOME)/single_cycle/verilog/csrc/utils/disasm.cc
CSRCS += $(shell find $(abspath ./csrc) -name "*.c" -or -name "*.cpp")

# verilator
VERILATOR = verilator
VERILATOR_CFLAGS += -MMD --build -cc  \
				-O3 --x-assign fast --x-initial fast --noassert --trace

# build
WORK_DIR = $(shell pwd)
BUILD_DIR = $(WORK_DIR)/build
OBJ_DIR = $(BUILD_DIR)/obj_dir
BIN = $(OBJ_DIR)/$(TOPNAME)
$(shell mkdir -p $(BUILD_DIR))

# for cpp header files
INC_PATH += $(WORK_DIR)/include
INCFLAGS = $(addprefix -I, $(INC_PATH))
CXXFLAGS += $(INCFLAGS) -DTOP_NAME="\"V$(TOPNAME)\""

# # for debugging
# CXXFLAGS += -ggdb -DVL_DEBUG=1 -D_GLIBCXX_DEBUG
# LDFLAGS += -ggdb

# for itrace
CXXFLAGS += $(CFLAGS_BUILD) $(CFLAGS_TRACE) -D__GUEST_ISA__=$(GUEST_ISA)

# for llvm disassemble
CXXFLAGS += $(shell llvm-config --cxxflags) -fPIE


# for additional lib
LDFLAGS += -lreadline -ldl -lSDL2
LDFLAGS += $(shell llvm-config --libs)

# default: run
$(BIN): $(VSRCS) $(CSRCS)
	@rm -rf $(OBJ_DIR)
	$(VERILATOR) $(VERILATOR_CFLAGS) \
		--top-module $(TOPNAME) $^ \
		$(addprefix -CFLAGS , $(CXXFLAGS)) $(addprefix -LDFLAGS , $(LDFLAGS)) \
		--Mdir $(OBJ_DIR) --exe -o $(abspath $(BIN))

build: $(BIN)

override ARGS ?= --log=$(BUILD_DIR)/npc-log.txt
override ARGS += $(ARGS_DIFF)

NPC_EXEC := $(BIN) $(ARGS) $(IMG)

run: build
	$(NPC_EXEC)

sim: run
	-gtkwave wave.vcd

gdb: CXXFLAGS+= -g
gdb: build
	echo $(BIN)
	gdb -s $(BIN) --args $(NPC_EXEC)
clean:
	-@rm -fr $(BUILD_DIR)
	-@rm -fr wave.vcd

.PHONY: clean run
